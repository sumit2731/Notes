Observer Pattern

    The observer pattern is a major behavioral design pattern. It allows objects (observers) that have subscribed to
     an event to wait for input and react to it when notified. This means they donâ€™t have to continuously keep 
     checking whether the input has been provided or not. The main subject maintains a list of all the observers and
     whenever the event occurs, it notifies the observers so they can update their states accordingly. see ffigure 1.



When to use the observer pattern?#
    The observer pattern can be used to:

    To improve code management by breaking down large applications into a system of loosely-coupled objects

    provide greater flexibility by enabling a dynamic relationship between observers and subscribers which is 
        otherwise not possible due to tight coupling

    improve communication between different parts of the application

    create a one-to-many dependency between objects that are loosely coupled