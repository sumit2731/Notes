width:100%  vs width:auto

keywords for width value -
    auto
    min-content - we're specifying that we want our element to become as narrow as it can, based on the child contents.
    max-content - This value is similar in principle, but it takes an opposite strategy: it never adds any line-breaks. The element's
        width will be the smallest value that contains the content, without breaking it up.
    fit-content: like min-content and max-content, the width is based on the size of the children. If that width can fit within the parent
        container, it behaves just like max-content, not adding any line-breaks.If the content is too wide to fit in the parent. however, 
        it adds line-breaks as-needed to ensure it never exceeds the available space. It behaves just like width: auto.

        if we use max-content and element cannot fit inside container, in that case it's width will increase and content will move
        out from container.that uis where fit-content comes handy.

min-width
max-width


Problem 1 -
    solution 1 -
        width: max-content
        max-width: auto
    result - this will fail when element has margin, then also giving 100% will atke it out of container.

    solution 2 -
        display: inline-block.

        result - diffrent heading come on same row.


    solution 3 -
        display: table

        By default, tables will shrink to hold their contents, but are still block-level elements.
        result - works fine.

    solution 4 -
        max-width: max-content;
        min-width: min-content;
        result - works fine.



