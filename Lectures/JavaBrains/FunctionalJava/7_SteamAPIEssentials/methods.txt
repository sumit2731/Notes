creating stream -
    collectionInstnace.stream()
    collectionInstnace.parallelStream()
    Array.stream(arrayInstance)
    Stream.of(ele1,el2,el3)
    Files.lines(PathofFile)
    Stream.generate(supplierFunction)
    Stream.iterate(initialValue,unaryOperator)


operators -

    terminalOperators(start and end the stream, they do not return new stream but end the stream) -
        forEach
        toList - converts teh stream into a list
        findFirst - short-circuiting terminal operation. gets the first element and then terminates the stream.
        anyMatch - short-circuiting terminal operation. returns true/false, on returning rue terminates stream.


    intermediate operators(return a different stream) -
        limit(number)
        filter
        peek
        distinct
        sorted
        takeWhile - takes until pradicate return false, when it returns true, terminates the stream


streamMethods -
    collect - used to convert stream into different collection. using Collectors
    parallel - converts stream into parallel stream

Static Methods on Stream Class -
    Stream.concat(stream1, stream2) - combines 2 streams
