Example of default browser Actions -
    mousedown – starts the selection (move the mouse to select).
    mousedown or keydown on input leads to focus event on input
    submit – clicking an <input type="submit"> or hitting Enter inside a form field causes this event to happen, and the browser
        submits the form after it.
    click on <input type="checkbox"> – checks/unchecks the input.
    keydown – pressing a key may lead to adding a character into a field, or other actions.
    contextmenu – the event happens on a right-click, the action is to show the browser context menu.
    A click on a link – initiates navigation to its URL.


Preventing Browser Actions

    There are two ways to tell the browser we don’t want it to act:

        a)The main way is to use the event object. There’s a method event.preventDefault().
        b)If the handler is assigned using on<event> (not by addEventListener), then returning false also works the same.
            (this works both ways i.e while adding attribute as well as adding  as DOM property)

            Returning false from a handler is an exception

The passive: true option of addEventListener tells the browser that the action is not going to be prevented. That’s useful for 
some mobile events, like touchstart and touchmove, to tell the browser that it should not wait for all handlers to finish before
scrolling.


Menu Example
    Why menu items are implemneted as links rather than buttons

        Many people like to use “right click” – “open in a new window”. If we use <button> or <span>, that doesn’t work.
        Search engines follow <a href="..."> links while indexing.


Follow-up events 
    If we prevent default action of mousedown event then focusing does not happen in input field.That means event.PreventDefault
     or return false, also prevents the follow up events.

     read frm blog


The Paassive Handler Options
    The optional passive: true option of addEventListener signals the browser that the handler is not going to call 
    preventDefault().

event.defaultPrevented
    The property event.defaultPrevented is true if the default action was prevented, and false otherwise.

    Sometimes we can use event.defaultPrevented instead, to signal other event handlers that the event was handled.
    Context Menu Example.

    Alternative way to implemented nested Context Menu


Stay semantic, don’t abuse


