13) when test libarry cannot find a role, it gives you error, a;so tells you which roles it can find in your DOM and
    what is name of elmeent and element itself.

    then we use firevents to simlate click event.






jest -

    a)toBe - expect(colorButton.textContent).toBe('Change to red');
    b)expect(checkbox).not.tobe(""abc)
    c)defining mock functions and giving them some output value -
        window.fetch = jest.fn();
        window.fetch.mockResolvedValueOnce({
            json: async () => [{id: 'p1', title: 'First Post'}]
        });

jest-dom - 

    a)expect(linkElement).toBeInTheDocument();
    b)expect(colorButton).toHaveStyle({backgroundColor: 'red'});
    c)toHaveTextContext -
        expect(colorButton).toHaveTextContent('Change to red');

    d)expect(colorButton).toBeEnabled();
    e)expect(checkbox).toBeChecked();

@testing-library/react -

    a)render
    b)screen
        let checkbox = screen.getByRole('checkbox', {name: 'Disabled Button'});
            You can query the returned element(s) by their accessible name. The accessible name is for simple cases equal
             to e.g. the label of a form element, or the text content of a button, or the value of the aria-label attribute.
    c)fireEvent.click(colorButton);


Bult in HTML elements have these roles -

1)button - <button>
2) <li> = listitem
3)heading
4)link = <a> if it has href
5)checkbox, <input type="checkbox">

pending -

    lecture 17