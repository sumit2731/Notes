CSS grid is extremy handy to center things. centering things in css is hard. flexbox solved most
 of problems of that. but with css grid it is even esier. IN CSS grid there are 6 proeprties(see code),
 that we can use to align things in grid.
    justify ones are along x axis or row axis
        and
    align ones are along y axis or column axis.unline flexbox they dnt switch.
    
    justify means along x-axis -
    
    1)justify-items - It aligns the grid items inside grid track along x axis.This is container
     property.default is stretch
        values: start|end|center|stretch

    2)justify-content -This property horizontally aligns the grid inside the container along x-axis. It is applied on 
     container property.
        values: justify-content: start | end | center | stretch | space-around | space-between | space-evenly;

    3)justify-self - This is same as justify-item.but where justify-items is applied on container, this property
        is applied on individual item. default is stretch.
        justify-slef: justify-self: start | end | center | stretch;
    
    align means along y-axis-
    
    1)align items - It aligns the grid items inside track along y axis. it is applied on container.
     default value is stretch.
        align-items: start | end | center | stretch;
    
    2)align-content: This property vertically aligns the grid inside the container along y axis. It is applied on
        container.default value is start.

    3)align-self: It is applied to grid item. This property vertical aligns a item inisde track.

so if you want to center something, just do this-
    justify-items: center
    align-items: center

we have shorthand for justify-items and align-items, it is place-items. it works like this-
    place-items: align-items> / <justify-items

we will see exmaples where we can use these.wes said he use it to center text inside of actual elements(open areas-FINISHED.html,
 here we have centerd,content inside individual grid items ).
wes used it in this project also.
If you look into common style.css, we can see that individual grid-item is also grid. in itself -
    .item {
        /* We center the contents of these items. You can also do this with flexbox too! */
        display: grid;
        justify-content: center;
        align-items: center;
        border: 5px solid rgba(0, 0, 0, 0.03);
        border-radius: 3px;
        font-size: 35px;
        background-color: var(--yellow); /* best colour */
    }
here we have'nt defined any columns or rows. but justify-content:center and align-items: center is great way just to 
 take whatever is in element, might just be a paragraph tag, might be raw text, might be couple of p tags and just to 
 perfectly center it without having to really worry about it.you can also do it with with flex box but i prefer to do
 it with grid because of the ability to do both do justify-self and align self.where as with flex box , you can only 
 do align-self. there is no justify self in flexbox. 

------------------------------------------------------------------------------
let's see how we has used it in project-

lets open file, areas-FINISHED.html(in folder 14) to see how this works.
what we want to do-
    here we want to center the content inside induival items.
How we do it-
    here we can see that size of tracks is fixed(width is divided between columns and height is divided between rows) 
    as we have only 1 column and 1 row(or 2). so need to center item within track,so use justify-items and align-items, 
    both with value of center. but in case of content you can see that it does'nt look nice.

    but wes bros has used some other approach in case of horizontal centering(vertical centering is done by align-items). as
    I explained above size of tracks is fixed, so there is no use of using justify content. but here is catch, when we
    use justify-content:center here, then we can see columns is only as wide as it needs to be(see footer area in dev tools). 
    here it does not cover full width.now because width of colun is adjusted, now it is placed in middle(horizontally), so we
    have it horizonatally alligned. but in content area we have long text which occupies full width, so width of column is equal
    to width of container.as a result ,second p tag of content area is not horizontally centered.

    Appying same thing on vertical axis, if we use align-content: middle, then height of rows is not equal to height of container.
    it is equal to height of content. so using it we can adjust the height of our tracks. and now we can see that in grid area, content,
    our p tags are in perfectly vertical middle.