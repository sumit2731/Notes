Lecture 15 -
    we will write unit test for src/math.js. a unit is smallest piece in your soft ware that works pretty much standalone you could say.
    formSubmitHandler function in app.js is also unit, but math.js is smaller unit because it is not calling other functions in the end.
    formSubmitHandler  is calling other functions.
    so you want to look for functions that are not calling other functions,and that are your units.your unit should be small and not do too
    many things.


    it or test - these can be used intrchangebably in boh jest and vitest.can we used without exporting by adding --global 
        flag. but importing gives better auto completion.

    Then we write the first test in -  3)Testing Basics/js-testing-practical-guide-code/code/basic-testing-frontend/src/math.test.js


Lecture 19 -
    AAA - 
        Arrange - The Arrange phase, where you wanna define the testing environment and values you are using in the test,
        Act - then the Act phase, where you perform the actual testing.So, where you execute the function that should be 
            tested
        Assert - you evaluate the result   and you set your expectation,you simply define which results lead to a success
            and which results lead to a failed test.

    See first test of math.test.js


20)Keep your tests simple and concise as possible
    in add function , there is no point in adding like 10 numbers.
    do not make them overly complex, think about you coming back to these tests and making a update,
    so you or your colleauge should be able to understand the test easily

21)
    a)write tests for things that should not happen

    best practices -
        a)write more than 1 test.
        b)also test for certain things that we do not want to happen(values that we expect to get if invalid values get passed)
    see test in math.test to know how to test whether a function throws error or not.

30)Intriducing test suits
    when to use suites

    a)When you have multiple functions in file
    b)Single functions is having lot of test


In this section we added test cases -
    a)math.test.js
    b)numbers.test.js
    c)validation.test.js