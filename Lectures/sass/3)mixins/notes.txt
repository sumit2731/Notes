Now mixns essentially allow you to create reusable styles, reusable pieces of code ,and you can then

use those mixin to well mix them into your other designs so you can include them wherever you want

throughout your code, Instead of rewriting that piece of code and this makes your code just so much more 
reusable,you can then use those mixdowns for future projects and you can also reuse mixes that are 
available through various frameworks out there.

code snippets -
    Syntax 1 -

        @mixin warning {
            background-color: orange;
            color: #fff;
        }

        .warning-button {
            @include warning;
            padding: 8px 12px;
        }

    Syntax 2(Instead of using font-size, we cab use this synntax,
        this is scss syntax nothing related to mixins) - 

        @mixin large-text {
            font: {
                size: 22px;
                weight: bold;
            }
        }

    Syntax 3(Using 1 mixin in another) -

        @mixin rounded {
            border-radius: 6px;
        }

        @mixin box {
            @include rounded;
            border: 1px solid #333;
        }

    Syntax 4(using mixin in root(outside any selector)) -

        @mixin fancy-links {
            a {
                font-style: italic;
                text-decoration: none;
            }
        }

        @include fancy-links;

    Syntax 5(mixin with arguments)-

        @mixin rounded($radius) {
            border-radius: $radius;
        }

        @include rounded(8px);

    Syntax 6 (defuat values of arguments)-

        @mixin rounded($radius: 6px) {
            border-radius: $radius;
        }

    Syntax 7 (How to pass second argumnet while using defualt value for first)

        @mixin box($radius: 6px, $border: 1px solid #000) {
            @include rounded($radius);
            border: $border;
        }

        @include box($border:1px solid #999);

        when we use names while passing arguments, we can pass them in any order-

        @include box($border:1px solid #999, $radius: 6px);

    Syntax 8 (Variable number of argumnets, varargs) -


        @mixin box-shadow($shadows...) {
            box-shadow: $shadows;
            -moz-box-shadow: $shadows;
            -webkit-box-shadow: $shadows;
        }

        @include box-shadow(2px 0px 4px #999 , 1px 1px 6px $secondary-color);

    Syntax 9(passing content to mixin) -

        @mixin apply-to-ie-6 {
            * html {
                @content;
            }
        }

        @include apply-to-ie-6 {
            body {
                font-size: 125%;
            }
        }
        
        css -

        * html body {
            font-size: 125%;
        }