Negative Margins -
    With padding and border, only positive numbers (including 0) are supported. With margin, however, we can drop into the
    negatives.negative margins makes changes to sibling's layout also.

    article - https://www.quirksmode.org/blog/archives/2020/02/negative_margin.html
        points covered -

            negative margin-top and margin-bottom -

                a)Giving negative margin top moves the element closer to it's parent(if it's first element) or to its previous sibling sibling.
                b)giving negative margin-bottom pulls next next siblong closer to element.If element is last child, then last child has
                    no effect on next parent.
                c)margin-collpasing and negative values -
                    a)If one is positive and one is negative, then negative is subtracted from positive.
                    b)If both values are negtaive, then more negative values is subtracted from 0 and other one is ignored.
            
            negative margin-left and margin-right(with fixed width) -

                d)negative margin-left moves the element to it's left(towards parent or towrds left sibling).for this element needs to have fixed wdith.
                e)negative margin-right will only affect right child.for this also element needs to have fixed wdith.
            
            negative margin-left and margin-right(withh width:auto) -
                f)with width auto, element take maximum width avalible, so they fill their parent comppletly.
                g)with negative margins applied on left amd right, elements starts expanding into the parent's padding.

Margin-Auto -
    The auto value seeks to fill the maximum available space. It works the same way for the width property. the byproduct
    for this is that we end up horizontally centering the element by setting margin-left/right to auto. also we can push it to
    right with margin-left: auto.

    Two caveats:
        This only works for horizontal margin. Setting top/bottom margin to auto is equivalent to setting it to 0px*.
        This only works on elements with an explicit width. Block elements will naturally grow to fill the available 
            horizontal space, so we need to give our element a width in order to center it.
    Links - 
        a)https://www.hongkiat.com/blog/css-margin-auto/
            margin:auto either takes max value or is 0;
            0 in case of inline elements, floated and absolute(position: fixed/absolute) elements.
            how to get horizontal and vertical centering with margin: auto is case of absolute element.
        b)https://www.youtube.com/watch?v=Azfj1efPAH0&t=1s
            code pen link - https://codepen.io/sumit2714/pen/GRYyemo
            a)flex items whose axis direction is row, also take auto value of margin-left and margin-right.
            here we saw that in flexbox(even css grid), auto value margin-top or margin-bottom works same way as margin-left or
                margin-right.
  
    note - margin: auto has no effect on display: inline/inline-block.with flex-box it moves individual flex-items.

Extra from course -
    margin collapsing -
        1)https://www.smashingmagazine.com/2019/07/margins-in-css/
            3 effects of this -
                1)parent-first child, parent,lastChild
                    here margin moves pout from parent.
                2)adjcent siblings.
                3)empty boxes, top and bottom margins are combined.
            How to prevent this - 
                1)add anything between margins like border, padding etc.
                2)establish new block formatting context. read separate article for this.
            margins do not collapse in flex and grid formatiing contextes.



 Questions asked by me -
    https://codepen.io/sumit2714/pen/poxbRKQ

    JoshAnswer -  Flow layout is designed for documents, and so the default vertical alignment is "baseline". It's essentially trying to 
    line up the bottom of the text with the bottom of the image's margin:
    

