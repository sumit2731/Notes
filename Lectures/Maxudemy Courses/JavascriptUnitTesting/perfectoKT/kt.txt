web App

    Automation -
        1)Create remoteWebDriver instance, it needs -
            cloudURL(hub url)
            capabilities(selects the device where you want to execute the tests)
                See docs for capabilities under Automation Testing -
                    manadatoryyCapabilities
                        securityToken - unique for each user
                        browserVersionName - can specify latest, latest-
                    othe capabilities -
                        takeScreenshot - takes screenshot on everyStep(disbaled by default)
                            you can see screenshot for every find command and assertion
                        screenShotOnError

        2)configure smart reporting-

            1)create reportium client -

                download sdk - avalible for all languages
                create reportiumClient inatsnace,here all methods related to report integartion exists. to create reportiumClient we need perfectoExecutionContext
                    perfectoExecutionContext takes - 
                        ProjectRelated details(optional) - projectName(My Project), project veerion(1.0), 
                        job details(optional) -job name("Perfecto-Web-Demo"),
                        remoteWebDriver (mandatory)

                        prjcet details and job details can be parametrized as well, In CI pipeline you can set it as system variable
                            and take it from there.
            2)start reportinimClient before starting test script(testStart)
                reportiumClient.testStart('Selenium Java Web Sample',new TestContext('tag1,'tag2'))
                takes - 

                    a)nameOfTestCase - This name is name of report in reporting module
                    b)testContext - testContext we can provide any number of tags,we can provide any number of tags

            3)Steps in reporting Client
            
                under reprotingClient report you will see all selenium steps like selectingElement,clicking on element.
                    we can group these into steps using reportingClient.stepStart("StepDesc") and reportingClient.stepEnd.All selenium
                    commands under a stepStart and stepEnd will come under a sinfle step. selenium comamnds are executed using
                    driver, like driver.getElement.
            
            4)Assertion with reportium client
                reptiumClient.reportiumAssert("Asert Result", driver.findElement());

                In Final report, In steps you will see a flag in steps. it will be red or green depending upon whether assertion
                    passed or failed.
            5)marking test as passed or failed
            reportiumClient.testStop(TestResultFactory.createSuccess())
            reportiumClient.testStop(TestResultFactory.createFailure(e, iD(this for category))) 
                execption and category will be added to perfecto reporting


    Open report -
        left header -
            name of report as configureed in rpeortium client
            earlier execution status
            time of test start
            details of machine where test ran - os, browser, browser version
            tags - added in automation script

        right header -
            info - 
                execution
                    job name
                    job number
                    job branch
                    project name
                    project version
                    tags
                variables- tese are capabilities that we have passed
                device detals
IOS apps (Real Device) -
    capabilties -
        device Id's - selects particular device.
        using regular expressions while menioning devices. ex -
            any galaxy devices -.*Galaxy.*
            any apple device - iphone.*
            iphone or ipad - iPhone.* | iPad.*

        app capability -
            upload app into repository and then provide path in automation. path can be found in repository.
            this needs to be provided as value of app capability
            you can also upload a file from your local system to perfector reposiotry by giving a path, then use that path
                in app capability.

        webView istrumentaion - indemtify UI elements in Hybrid Apps
        sensor intrumentation - simulate camera images, simulate finger print
        autolaunch
        IiOResign - resign the application with developer certificate
        openDeviceTime - It will keep polling for device if it is not avalaible,if this is specified , it will stop execution
            and throw error if device is not avalible for this much of time.

Virtual Devices(mobile - android and IOS) -
    additional capability -
        capabilities.setCapability("useVirtualDevice",true)

perfecto connect client -
    Helps to generate a tunnelId, which connects perfeco lab device to your dev network.
    It needs to be provided as additional capability named tunnelId.tunnelid can also be seen in cloud, beside profile pic icon, you can see tunnelId


    Also this tunnel can be configured in jenkins, in code you can get it as envirenment variable and use it.
    see additinal proxy step.



Insights -
        Parallel execution is achieved using fraework level nothing to do with perfecto
        Live video is not avalible for devices which have audio