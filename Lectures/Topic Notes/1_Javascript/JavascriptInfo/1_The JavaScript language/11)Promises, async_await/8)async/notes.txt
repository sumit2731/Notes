1)top level await allowed in modules.
2)async await works in modules

5)await also works with thenable objects.when we use await in front of thenable objects, there then function is called.
    within then when we call call resolve/reject decides when our promise will be resolved and rejected.

    An await acts on an expression. When the expression is a promise, the evaluation of the async function halts until the promise
    is resolved. When the expression is a non-promise value, it is converted to a promise using Promise.resolve and then resolved.

4)when we are awaiting a promise and it fails, then it is equivalent to throing the error. promise returned by async function is
    rejected.how to handle it?
        use try ,catch block in your code.

Extra from Blog -
    If you manually want the promise, returned by asyn function to fail, throw the Error from function.


From article - https://blog.bitsrc.io/understanding-javascript-async-and-await-with-examples-a010b03926ea

disadvantages of promises -
    We still have to give a callback to every .then.
    Instead of using a normal try/catch, we have to use .catch for error handling.
    Looping over multiple promises in a sequence is challenging and non-intuitive.

2)also see error handlin in this article.

3)then see example of calling a promise that does not return anything, but calls a 

