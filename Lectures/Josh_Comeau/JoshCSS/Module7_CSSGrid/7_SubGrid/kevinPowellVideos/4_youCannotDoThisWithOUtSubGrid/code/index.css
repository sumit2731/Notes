.with-subgrid {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
}

.with-subgrid > ul {
  /* this is trick */
  display: grid;
  /* 
  Here we are using subgird in grid-template-rows to make equal size rows
  we tell that this grid should have same rows as its parent grid
  */
  grid-template-rows: subgrid;
  /* 
  Since parent grid will by default have only 2 rows, we tell parent grid to have 99 rows.
  By default grid adjusts the height of rows that n rows fills the longest child. but in this
  case rows will have height to fill the child of subgrid 
  */
  grid-row: span 99;
}

.without-subgrid {
  display: grid;
  grid-template-rows: repeat(8, 1fr);
  align-items: center;
}

:root {
  --nice-shadow: 0px 0px 2.2px -4px rgba(0, 0, 0, 0.048),
    0px 0px 5.3px -4px rgba(0, 0, 0, 0.069),
    0px 0px 10px -4px rgba(0, 0, 0, 0.085),
    0px 0px 17.9px -4px rgba(0, 0, 0, 0.101),
    0px 0px 33.4px -4px rgba(0, 0, 0, 0.122),
    0px 0px 80px -4px rgba(0, 0, 0, 0.17);
}

body {
  font-size: 1.25rem;
  margin: 3rem;
}

h2 {
  text-align: center;
  margin-top: 5rem;
}

.lists {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
  /* If use this property then even empty rows will have height */
  /* grid-auto-rows: 1fr; */
  column-gap: 1em;

  max-width: 70ch;
  margin-inline: auto;
  padding: 2rem;
  border-radius: 1em;
  box-shadow: var(--nice-shadow);
}

.lists li {
  padding-left: 0.5em;
}

.lists li:not(:first-child) {
  border-top: 1px solid rgb(0 0 0 / 0.3);
  padding-top: 2rem;
}

.lists li:not(:last-child) {
  padding-bottom: 2rem;
}

.lists li::marker {
  content: "âœ”";
  font-size: 0.85em;
}

.lists ul {
  margin: 0;
  border-radius: 1rem;
  padding: 2em;
}

.lists ul:first-child {
  background: hsl(250 25% 50% / 0.2);
}

.lists ul:last-child {
  background: hsl(125 25% 50% / 0.2);
}

.container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-flow: row;
  gap: 1em;
}

.child1,
.child2,
.child3 {
  background-color: red;
  width: 200px;
  height: 200px;
}

.child3 {
  grid-row: span 3;
}
