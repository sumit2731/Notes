Section 1-
    In Jasmine tests are known as specifications or specs and they are grouped in test suites.
    angular test bed utility, it allows us to provide dependeicies to our services by using
    dependecy injection
    diffrent tests(it blocks) should be isolated from each other, this is done by using beforeEach block,
    which reinitalizes all variables before each test needs. each test gets its own testingModule, with
    it's own private isntance of calculator service and loggerSpy.

    Tests should use dependecy injection pattern as much as possible. this will be more useful when testing more 
    complex services and components.
    jasmine utilities-
        xdescribe - desables this test suite(0 out of 2 ran)
        xit - disbales this test suite
        fdescribe - will only execute this test suite. f means focus
        fit - will execute only this test suite

    npm run server
    npm start
    ng test - It compiles all application code as well as specification code and it is also going to run our test specification 
        using karma test runner.karma is used internally by angular cli. ng test is also going to launch an instance of  the chrone 
        browser where test will be executed
    ng test --no-watch

Section 2-
    Extra from notes -
    a)See API of TestBed. links -
        1)https://codecraft.tv/courses/angular/unit-testing/angular-test-bed/
        2)https://stackoverflow.com/questions/39281848/overridecomponent-with-testbed

    b)see api of fixture
    c)see api of debugElement


Section 3-

1)testing Presentational Component
    here we started with presentational component testing. presentational
    components simply take some input data and just show it on screen. courses-card-list.component
    is such kind of componenet.generally we follow not to test these kind of components and chose
    to test complex components.
    but here we will test them, because of 2 reaons-
        1)sometimes you have to test them because of test coverage requirements
        2)we will show how angular unit testing can validate the content of DOM if needed.

    As you can see courses-card-list.component does'nt need any services to get data, it receives data as
    parameters. It uses a service just to open dialog box when user clicks on edit.see spec file of it to
    see how we can test these type of components.here we test courses-card-list.component which is presentational
    type of component.

2)Testing smart or container component
    these types of components genrally get their data from observable based service and not froma @input.
    HomeCompoent is such tpe of component. it gets it data from courses service which we have tested before.
    In this section we try to test home component but we run into a problem. that problem is solved in scetion 4.


Doubts -
1)diffrence betwwen component isntace and component refrence
2)hostView vs embeded view


Section 4-
    Here we saw some problems that asynchrinous operations performed by angular componeents
     can create when writing tests for those components.