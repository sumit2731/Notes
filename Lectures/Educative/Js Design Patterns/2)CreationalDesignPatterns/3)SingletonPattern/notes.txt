The singleton pattern is a type of creational pattern that restricts the instantiation of a class to a single object. This 
    allows the class to create an instance of the class the first time it is instantiated. However, on the next try, the 
    existing instance of the class is returned. No new instance is created.

Singletons are mostly used by -

    Services: services can be singleton since they store the state, configuration, and provide access to resources. Therefore, 
        it makes sense to have a single instance of a service in an application.

    Databases: when it comes to database connections, databases such as MongoDB utilize the singleton pattern.

    Configurations: if there is an object with a specific configuration, you donâ€™t need a new instance every time that 
        configuration object is needed.