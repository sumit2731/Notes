commands -

        1)docker run "imageId"
            creates a contianer form image and runs that container in attached mode by default. imageid can exist on system or
                on dockerHub.

            Examples - 

                docker run node
                    It downloads the node docker image from docker hub(if not found locally) and creates the contianer based 
                    on that image.here container is created and exited automatically because intercative shell created in 
                    container is not exposed to us automatically.for that we can add flag -it, we will actually tell Docker 
                    that we wanna expose an interactive session from inside the container to our hosting machine.

                    docker run -it node

                    flags -

                        1)-p = for attaching port.
                            docker run -p "loalPort":"imagePort" dockerImage
                            it runs the dockerImage into contianer and connect port 3000 of local system with port 80 of docker container.
                        2)-d = dettached
                            docker run -d "imageId"
                                for running container in detached mode. it returns the id of detacched container. which can be later used to
                                attach the container.

                            using multiple flags -

                                docker run -p 8000:80 -d "imageid"

                        3)-i  interactive
                            docker run -i "imageId"
                                runs docker container form image, and give intercative terminal.generally used along with "t" flag -
                                docker run -it "imageId"


                        4)--rm
                            it automatically removes the container when it exists.
                            docker run -p 3000:80 -d --rm "imageId"

        2)docker start "containerName"(or contianerId)
            this restarts a container in detached mode.

            flags -
                1)a - attaches the started container.
                    docker start -a "containerName". this is for listening the output, i.e this is listen only mode.if you
                    want to give input, use -i flag.

                2)i - interactive flag.you give input also.
                    docker start -a -i "containerName". you can use -t flag but if orignally container was started with -t flag
                    then that will be memomized.

        
        3)docker container attach "containerId"
            Attcahes a detacched container.

        4)docker attach "containerName"
            attaches a running container

        5)docker logs "containerName"
            fetches the past logs for containers.

            flags -

                -f - follow. keeps on listening and prints future logs also. we are simply attaching docker gain.


        6)docker rm "container1Name" "container2Name" "container3Name"
            It removes the contianer. this container should be stopped first, you cannot remove a running container.

        7)docker container prune
            removes all stopped containers at once.

        8)docker images
            lists all images

        9)docker rmi "image1Id" "image2Id" "image3Id"
            it removes the image and all its layers. you can only remove the images which are not used by any containers.
            that means even if image is used by container and that container is stopped, first you need to delete the 
            contianer, only then you can remove the image.

        10)docker image prune
            removes all images which are not used by any containers.

        11)docker image inspect "imageId"
            gives the details about a image.

        12)docker cp - docker cp "path1" "path2". copies files form path1 to path2.
            docker path is specified by dockerName:pathInsideDocker
                ex - a)docker cp dummy/. strange_neumann:/test (copies file from local to conatiner. dummy/. means copy all contents inside dummy, 
                        we can also target induival files)

                    b)docker cp strange:/test dummy (copies file from container to local system)                 