response headers -

    CORS-


        Access-Control-Allow-Origin - That header should contain the allowed origin (in our case https://javascript.info), or a 
            star *. Then the response is successful, otherwise it’s an error.

        
        Safe response headers that can be accessed in response of safe request -


            Cache-Control
            Content-Language
            Content-Type: 'application./json'
            Expires
            Last-Modified
            Pragma

        Access-Control-Expose-Headers - sent by server in safe request,it contains a comma-separated list of unsafe header names 
            that should be made accessible.
        
        Access-Control-Allow-Methods  - must have the allowed method.
        
        Access-Control-Allow-Headers - must have a list of allowed headers.

        Access-Control-Max-Age(optional) - specify a number of seconds to cache the permissions. So the browser won’t 
         have to send a preflight for subsequent requests that satisfy given permissions.


        Access-Control-Allow-Credentials - allows client to set cookies and auth informtaion in CORS request.

    cookie -

        Set-Cookie

    security -
        Strict-Transport-Security (HSTS) - The HTTP Strict Transport Security header informs the browser that it 
            should never load a site using HTTP and should automatically convert all attempts to access the site using
            HTTP to HTTPS requests instead.
            
            syntax -

                Strict-Transport-Security: max-age=<expire-time>
                Strict-Transport-Security: max-age=<expire-time>; includeSubDomains
                Strict-Transport-Security: max-age=<expire-time>; preload

                Strict-Transport-Security: max-age=31536000; includeSubDomains

        Content-Security-Policy (CST) - you can enable it by adding header or by using meta tag -

            <meta http-equiv="Content-Security-Policy"
                content="default-src 'self'; img-src https://*; child-src 'none';">


            what it does -
                a)A CSP compatible browser will then only execute scripts loaded in source files received from those 
                    allowed domains, ignoring all other scripts (including inline scripts and event-handling HTML 
                    attributes).

                b)he server can specify which protocols are allowed to be used; for example (and ideally, from a security
                 standpoint), a server can specify that all content must be loaded using HTTPS.

                    cookies attributes - marking all cookies with the secure attribute and providing automatic redirects
                     from HTTP pages to their HTTPS counterparts.
        


request headers -
    
    CORS-
        Origin - tells from where the request came. (such as https://javascript.info)

        headers allowed in safe request -

            Accept,
            Accept-Language,
            Content-Language,
            Content-Type with the value application/x-www-form-urlencoded, multipart/form-data or text/plain.
        
        Access-Control-Request-Method - header has the method of the unsafe request.
        Access-Control-Request-Headers - header provides a comma-separated list of its unsafe HTTP-headers.

        Referer - The Referer HTTP request header contains an absolute or partial address of the page that makes the 
            request.can be controlled by response header - Referrer Policy




    cookies -
        
        Cookie


18001031333

Connection: keep-alive
content-encoding: gzip
Content-Type: text/html
Date: Mon, 11 Apr 2022 06:36:22 GMT
last-modified: Mon, 11 Apr 2022 05:49:41 GMT
server: fwe
Transfer-Encoding: chunked
x-envoy-upstream-service-time: 1
x-frame-options: SAMEORIGIN
x-fw-ratelimiting-managed: false
x-request-id: 9a431ecc-e69b-929f-b989-0922e8fdb3a7
x-trace-id: 00-062411f95f3f162fdf1d125b285e911b-8e8f22962aa89156-01