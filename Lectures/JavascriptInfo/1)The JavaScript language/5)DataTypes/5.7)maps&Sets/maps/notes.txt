Map methods

API -

    new Map([iterable]) – creates the map, with optional iterable (e.g. array) of [key,value] pairs for initialization.
    map.set(key, value) – stores the value by the key, returns the map itself.
    map.get(key) – returns the value by the key, undefined if key doesn’t exist in map.
    map.has(key) – returns true if the key exists, false otherwise.
    map.delete(key) – removes the value by the key, returns true if key existed at the moment of the call, otherwise false.
    map.clear() – removes everything from the map.
    map.size – returns the current element count.

d/w with normal object -
    Key can be any data type(in obj, key of any data type is converted into string)
    order of insertion is preserved unlike regular objects.

Using objects as keys is one of the most notable and important Map features.

Ways to iterate a map
    
    map is itself a iterable, it can be used in for..of loop , each element is [key, value]
    map.keys() – returns an iterable object for keys.
    map.values() – returns an iterable object for values.
    map.entries() – returns an iterable object for entries [key, value], it’s used by default in for..of.
    Map has a built-in forEach method, similar to Array:
    By Using Maps in "for of" loop

    The iteration goes in the same order as the values were inserted. Map preserves this order, unlike a regular Object.

Creating Map -

    a)we can pass an array (or another iterable) with key/value pairs for initialization, like this:

        let map = new Map([
            ['1',  'str1'],
            [1,    'num1'],
            [true, 'bool1']
        ]);

    b)If we have a plain object, and we’d like to create a Map from it, then we can use built-in method Object.
        entries(obj) that returns an array of key/value pairs for an object exactly in that format.

            let obj = {
                name: "John",
                age: 30
            };

            
            let map = new Map(Object.entries(obj));


Creating Object from Map -
    
    Object.fromEntries expects an iterable object as the argument.each item of iterable should be [key , value]

    let map = new Map();
    map.set('banana', 1);
    map.set('orange', 2);
    map.set('meat', 4);

    let obj = Object.fromEntries(map);


Mozilla Docs - 





refer to javascript.info and mozilla docs

1)maps vs objects- refer to mdn docs of map
    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map
