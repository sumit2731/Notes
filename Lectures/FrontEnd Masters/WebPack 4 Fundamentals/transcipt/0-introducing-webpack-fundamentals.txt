[00:00:02]
>> Sean Larkin: I was in two years ago, before I started maintaining webpack in your exact position. I actually got obsessed with webpack, cuz being a really one off contracting job and I got involved, because I jumped into a new web project that was using React and I used Angular my whole life.

[00:00:23]
Well, we, the last year and a half before and I encountered this beautiful, rich, obsessive development experience. I was like, how can I get more of this? So that's kind of where it all started, but I have been in your shoes. And so hopefully, what I'm gonna present to you today is really gonna teach and lay a foundation of not only like why are we using webpack?

[00:00:51]
Why do people use it today? What problems does it solve? What are the concepts and how can you walk away feeling really comfortable? Because at the end of the day, really, webpack's strength is the ecosystem itself that's around it. At its core, it's a very simple tool in terms of its capabilities standalone.

[00:01:16]
But yes, a little bit about myself, I'm Program Manager at Microsoft. I work on the Microsoft web platform or Microsoft Edge. I'm a Program Manager for Edge Dev Tools. So probably maybe about 30, 40, 50% of my time now, I'm also helping other companies or other teams internally across Microsoft use webpack.

[00:01:39]
It turns out when I started, I didn't know that webpack is the third most used JavaScript library at Microsoft and that blew me away. It was also a huge opportunity to provide value. But you may know me as one of the maintainers of webpack, and you'll probably see me on Twitter all the time responding to tweets.

[00:02:00]
That's kind of how I got my following, trying to help people. I also did a little bit of work with Angular CLI as one of the core team members and I helped, brought web pack to Angular, in the Angular ecosystem as well as just an evangelist for open source sustainability.

[00:02:17]
So a little bit about myself, I'm a former Tech Support Rep gone rogue, turned software engineer and I as just tired of not being able to solve people's problems. Everyday I'd take calls, I'd work around, this is a workaround, we're gonna fix this eventually and it was just I got tired of it.

[00:02:36]
And so, I taught myself Apple script, and then Ruby and it led to objective c and finally Swift. And then I found my true love with JavaScript. And I also just really believe in sustainable open source practices in community and outreach. And so, probably like any of the things you can find me @THELARKINN, so feel free and follow me on Twitter, tweet at me any time, my DMs are open, doesn't matter when, I always promise people I will eventually respond, it's just depending how busy I am, it may take a day or two.

[00:03:11]
And I do have an ask-me-anything, page so you can go to github.com/thelarkinn/ama, you can ask me anything you want, it doesn't matter. So what are the expectations? So I have some general expectations for you.
>> Sean Larkin: And really day one is kind of setting the scene, like why webpack?

[00:03:32]
Just getting started with nothing, but the command line. Understanding, how many here even understand how the npm ecosystem works? Or npm scripts? These are things that maybe you just have been like, run this command in the terminal. And if you're like a dot net developer, you're like I've never ran a command in my life.

[00:03:55]
And so, like these are just some subtle things that when you are just talking about webpack. You're going to understand how the npm ecosystem works. Running scripts, really simple things that are gonna be super valuable to you later on. And then we talk about the core concepts. So I break down a web pack into four parts.

[00:04:17]
And then we'll do a little bit of live coding and just really start from scratch. We'll add scripts into an empty project, we'll build on and start adding more functionality, more behavior, and really it's gonna set the foundation for how you really have your build architecture your build system.

[00:04:37]
Things that you can reuse over and over again, but at the end of the day it's really your control. And then other things like, what are the essential loaders and features that come with webpack that are in the ecosystem that are canonical across any project? And then we'll even try to build some very, we'll built some very low fidelity web applications and bundle them together with webpack.

