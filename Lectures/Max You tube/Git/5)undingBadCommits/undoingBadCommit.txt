Modify your last commit, adding (or removing) some changes and edit your last commit message

1)Modifying Last Commit(changing commit messsage)-
    
    a)Make Changes(in code) and give message -
        a)make changes to file.
        b)stage those changes
        c)git commit --amend
        d)VIM editor is opened, press i to edit commit message.
        e)make chnages and press esc. then type :wq to save file.

    b) Changing a commit(making some chnages in code) without changing it's message -
        a)make changes to file.
        b)stage those changes
        c)git commit --amend --no-edit


    c)Change commit message without opening file in VIM -

        git commit --amend -m "Your new commit message"


2)Cherrypick(Creating new commit from existing commit, even in different branch)
    let's say we want to ove commit from one branch to another-
        1)go to branch where commit is, copy commitId
        2)go to branch where you want to move commit.
        3)run -
            git cherry-pick commitHash

        4)it will not delete exisiting commit from branch, you have to do it manually.


3)delete unstarcked files-
    git clean -df
        d stands for directory
        f stands for files

4)How to recover from (git reset --hard)
    git reflog(copy id form here)
    git checkout "copiedId"(you are in detached state, you need to create branch from it)
    git branch b1(this will create new branch b1, you can move to this new branch and see your commit here)


5)git revert-
    if others have pulled your commits then you should not modify git history, that is what you were doing in above 
        methods.this is where you should use this command. this creates the new commits to revert the effects of previous 
        commits, this way you dnt rewrite the git history. so it will not remove exisiting commits, it will make new commits
        on top of it , that will completly undo the changes, so that history remsins intact.

    1)copy id of commit which you want to undo
    2)git revert copiedId
    3)now we will have new commit, that will reverse the effects of commit whose id we copied