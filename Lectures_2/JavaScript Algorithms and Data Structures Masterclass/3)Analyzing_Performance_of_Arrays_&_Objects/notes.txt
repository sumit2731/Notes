Refer to slides given in lecture-

Objects are unordered data strcutures and everything is stored in key-value pair.
there is no order but all operations like addition, removal is very quick. big O of
insertion,removal, and access is O(1). for seraching it is O(n).

later we have section called hash maps (and hash tables) where we actually learn a 
data strcuture that explains how objects work behind the scenes.

Searching means checing if given piece of information is in a value somewhere.

---------------------------------------------------------------------------------
Arrays-
    see lecture 16.

    use array if you need order, if you dnt need order then you probabaly dnt want to
    use an array, if you are trying to store random data, you can still use the arrays but if
    you want to optimize  for performance there are other options. and even if you do need order
    we are going to see some other structures coming up like aingly linked linked list nd doubly
    linked list that still have order, but they can perform better than arrays depending upon
    what you need.so arrays are not only ordered data structure on earth. they are only oone
    we get for free in js.

    Complexities-

        Accessing - O(1)
        
        Adding-
            at last - O(1)
            at begining- O(n)
        Removing-
            at Last- O(1)
            at begining -O(n)

        Searching -
            fastest - O(n)

    In arrays avoiding ading/removing from start