1)when flex childern has positioned layout
    When there is a conflict between layout modes, positioned layout always wins. Our help button will become fixed to the 
    bottom-right corner of the viewport, and the .row Flex container will ignore it, and act as though it only has one child 
    (<main>).

2)Margin collapse is exclusive to Flow layout. It doesn't happen when elements are laid out inside a flexbox parent.

3) Flexbox algorithm also supports z-index. If our element is being laid out with Flexbox, it uses z-index as if it was rendered with Positioned 
    layout. Positioned, Flexbox, and Grid all implement support for z-index. Flow layout does not.



Exercise 1 -
    Problem - We have content in 2 columns. content in column2 has more height than content in column1. we have 
        following constratints -

        a)Two equal width columns
        b)The container should be the height of the first column.
        c)The second column should scroll vertically, since it won't fit in the shorter container.


    Solution 1(does not need flexbox) -
        
        Container is given position:relative.
        Column2 is given position: absoloute. now height of parent is determined only by column1 as column2 is taken out
            from document flow.

        arrange column2 on right hand side of container and give it height that is 100%(now parent has height so we can use %) -

        column1 is given margin-right: 50%. column 2 is given width:50% and positioned with right:0, top:0
        column2 is given height: 100% and overflow:auto.

        https://codepen.io/guglielmodanna/pen/bGqqPbG

        Learning - when child is moved out from document flow,parent does not depends on its height. but child can use %
            value in height i.e child can use parent's heigth to decides ots own height.

    Solution 2(needs flexbox)-
        Equal columns - use flex-basis:0 and flex-grow:1.
        
        col1 determines container height -col2 is given position:relative and overflow:auto. ol inside col2 is given 
            position:absolute.That means col2 will not look at ol for its height.its height will only be determined by p tag.but
            col1 has more height. so height of container is dicdated by col1 only.

            col1 dicdates height, now because of align-items:stretch, col2 has height equal to container.

        col2 has scroll:auto, for content exceeding col2 height, we will have scroll bar.

        https://stackblitz.com/edit/js-fagkqf?file=index.html

        Learning -
            1)In flexbox(or in any other layout) if one of child is taken out from flow, it does not dicdate height.
            2)Even in flex-items if one of child is taken put from flow, it does not dicdate height of flex-iten.
    
    Solution 3(Used by josh in course) -
        1)Equal width column - flex-basis: 0, flex-grow:1.
        2)Height depends on column1 - Set height of column2 equal to 0.now as flexbox height depends upon its tallest 
            flex-childern, column1 will dicdate height of container now. but contents of col2 are moving out from container,
            but still they do not dicdate the height of column.
        3)col1 should be fixed and col2 should have scroll bar - use overflow:auto on parent, now parent will have scroll bar.
            but now col1 is also scrolled out.
        4)fixing col1 - use position:sticky on col1, to fix it.
            