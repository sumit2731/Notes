response directive -

    max-age - Time after generating response till which cache is treated as fresh. which server wifor which cache will be fresh.
        if received from cache then Age heder will be adjusted from this(time for which response was cached on shared acche)

    s-max-age - max-age on shared chache, and they will ignore max-age when it is present. we can use both max-age and
        s-max-age to give diffrent max ages for local and shared cache.

    no-cache - The no-cache response directive indicates that the response can be stored in caches, but the response must be 
        validated with the origin server before each reuse, even when the cache is disconnected from the origin server.

    must-revalidate - when cache is stale, it must be revalidated with server.HTTP allows caches to reuse stale
        responses when they are disconnected from the origin server. must-revalidate is a way to prevent this from happening - 
        either the stored response is revalidated with the origin server or a 504 (Gateway Timeout) response is generated.

    proxy-revalidate - The proxy-revalidate response directive is the equivalent of must-revalidate, but specifically for shared
        caches only.

    no-store - This stells browser to not store anyyhing in cache.
        The no-store directive prevents a response from being stored but does not delete any already-stored response for the 
        same URL.If there is an old response already stored for a particular URL, returning no-store will not prevent the old
        response from being reused.

        However, a no-cache directive will force the client to send a validation request before reusing any stored response.

    private -

    public - The public response directive indicates that the response can be stored in a shared cache. Responses for requests 
        with Authorization header fields must not be stored in a shared cache; however, the public directive will cause such
        responses to be stored in a shared cache.

    must-understand -

    no-transform -

    immutable - 

    stale-while-revalidate - 
        Cache-Control: max-age=604800, stale-while-revalidate=86400

    stale-if-error -
        Cache-Control: max-age=604800, stale-if-error=86400


request directives -

    no-cache - The no-cache request directive asks caches to validate the response with the origin server before reuse.no-cache 
        allows clients to request the most up-to-date response even if the cache has a fresh response.Browsers usually add 
        no-cache to requests when users are force reloading a page.

    no-store - The no-store request directive allows a client to request that caches refrain from storing the request and c
        orresponding response — even if the origin server's response could be stored.Note that the major browsers do not 
        support requests with no-store.

    max-age - The max-age=N request directive indicates that the client allows a stored response that is generated on the origin
        server within N seconds — where N may be any non-negative integer (including 0).
        
        Many browsers use this directive for reloading, as explained below.
            Cache-Control: max-age=0

        max-age=0 is a workaround for no-cache, because many old (HTTP/1.0) cache implementations don't support no-cache. 
        Recently browsers are still using max-age=0 in "reloading" — for backward compatibility — and alternatively using 
        no-cache to cause a "force reloading".

    no-transform - Same meaning that no-transform has for a response, but for a request instead.

    only-if-cached - The client indicates that an already-cached response should be returned. If a cache has a stored response,
        even a stale one, it will be returned. If no cached response is available, a 504 Gateway Timeout response will be 
        returned.
    

