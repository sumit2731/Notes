1)Inheritance Syntax -

    .error {
        color: red;
    }

    .critical-error {
        @extend .error;
        border-bottom: 1px solid red;
        font-weight: bold;
    }

    generated css -

    .error, .critical-error {
        color: red;
    }

    .critical-error {
        border-bottom: 1px solid red;
        font-weight: bold;
    }

2)what can we extend?

    also here we extended a class selector, we can extend any selector that involves single selectors, it can
     also be a pseudo selector, like this-
        a)a:hover
        b).headline.large - It is single element selector that requires elements to have both classes

    But this kind of selector(where you require multiple elements) is not possible - 
        @extends .headline .large;

3)multiple extends in same selector-
    
    also you can have multiple extends in same selector like this-

        .cta-button {
            @extend .warning-button;
            @extend .error;
            @include rounded;
        }

4)Chained selectors -
    You can also have chained extends statements (cta-button extends some class, and super-cta-button extends 
    cta-button) ex -

        .cta-button {
            @extend .warning-button;
            @extend .error;
            @include rounded;
        }

        .super-cta-button {
            @extend .cta-button;
        }

5)media query and extend -
 we cannot use a selector that is outside media query to extend from inside the media query--
    .cta-button {
        @extend .warning-button;
        @extend .error;
        @include rounded;
    }

    @media screen {
        .super-cta-button {
            @extend .cta-button;
            font-size: em(20px);
        }
    }
    
    but other way around works(sou yu can extend classes that are defined inisde media query, outside of media query).
        It even tells you , you may only extends selectors within the same directive.

    but this is posisble as both classes are within media query -

        @media screen {
            .sumit {
                color: black;
            }
        }

        @media screen {
            .super-cta-button {
                @extend .sumit;
                font-size: em(20px);
            }
        }

6)extend only selectors - these selctors wnt generate any css code. they are only used for extending. so you never 
    want to use class itself, you only want to use extensions of that class. so we dnt need any css code fro them.

    %highlight {
        font-style: italic;
    }

    .subtitle {
        @extend %highlight;
        padding: 8px 12px;
    }

    here % tells that , this is extend only selector.
    generated css -

    .subtitle {
        font-style: italic;
    }

    .subtitle {
        padding: 8px 12px;
    }

7)Optional extending, iw we extends a selector, that does not exist we get error. but if we want to extend only if
    selector exists and ignore otherwise-

    .subtitle {
        @extend %highlight;
        @extend .foo !optional;
        padding: 8px 12px;
    }