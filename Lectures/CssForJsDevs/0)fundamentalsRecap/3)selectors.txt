pseudo selectors - target state of elements. examples -

    :hover
    :focus
    :cheked - The :checked pseudo-class only applies to checkboxes and radio buttons that are "filled in"



Pseudo elements - Pseudo-elements are like pseudo-classes, but they don't target a specific state. Instead, they 
    target "sub-elements" within an element.This is why they're called pseudo-elements — these selectors target elements
    in the DOM that we haven't explicitly created with HTML tags.



    example -
        ::placeholder
        ::before
        ::after

    code snippet1 -

        input {
            font-size: 1rem;
        }
        input::placeholder {
            color: goldenrod;
        }

    code snippet2 - 

        <style>
            p::before {
                content: 'sumeet ';
                color: deeppink;
            }
  
            p::after {
                content: ' ←';
                color: deeppink;
            }
        </style>

        <p>
            This paragraph has little arrows!
        </p>


combinator - The term “combinator” refers to a character that combines multiple selectors.
    
    child -
          
        .main-list > li {
            border: 2px dotted;
        }

    combining child and descendent -

        .main-list ul  >li {

        }

        evelauated from left to right


color -
    keywords - red
    HEX CODES -  (each 2 digits starting form left are value for red green blue)

        #FF0000 and #A33E02

    RGB - rgb(255,0,0)

    HSL - hue , stauration,lightness value (0 deg, 100%,50%)

        hue is actual pigment in color(what color is being used)
        saturaton is how greyed out and vibrant is the color.
        loghtness - color is light or dark

    HSL is fav of josh, this is how we use it -

        color: hsl(200deg 100% 50%);


    Transpareny - Certain color formats allow us to supply an additional value for the alpha channel.At 1 
        (default), the color is fully opaque and solid. At 0, the color is invisible. 
        
        .first.box {
            background-color: hsl(340deg 100% 50% / 1);
        }


units -
    px - 1/96 th of inch.
    em - Certain color formats allow us to supply an additional value for the alpha channel.It's a relative unit, equal 
        to the font size of the current element. if you try to set the font-size using em then it check font size of
        parent.
        for ex-


            <span style="font-size: 2em ;padding: 2em">
            This
            </span>

            here to calculate font size of span, we will look at parent's font size. once it is calculated then we will calculate
            padding. padding will be double of font size, so absolute values will be diffrent even though they use same valur of
            2em

        How often should you use ems? I don't often reach for them. It can be very surprising when a tweak to font-size 
        affects the spacing of descendant elements.This is especially true when it comes to modern component architectures.
        Using em means that a component's UI will change depending on the font size of the container it's placed within. 
        This can be useful, but more often than not, it's a nuisance.

        The two examples shown are the only two practical examples I could come up with. In most situations, rem works 
        better.

    rem - The rem unit is quite a lot like the em unit, with one crucial difference: it's always relative to the root 
        element, the <html> tag.

        All of the rems across your app will be taking their cues from that root HTML tag. By default, the HTML tag has 
        a font size of 16px, so 1rem will be equal to 16px.

        people like the rem unit, because No matter where an element is in the DOM tree, the rem is consistent.It behaves
         consistently and predictably, like pixels, but it respects user preferences when it comes to increasing/decreasing
          default font sizes.


        Please note, you shouldn't actually set a px font size on the html tag. This will override a user's chosen default 
        font size.

