Container properties -

    display:flex;
    flex-direction: row(default), row-revrese, column, column-reverse;
    justify-content: flex-start(default),flex-end, end, space-around, space-between
    align-content: flex-start, flex-end, space-around, space-between, stretch(default)
    flex-wrap: no-wrap(default),wrap, wrap-reverse.
        note using flex-wrap: wrap-reverse, align-content: flex-end will work like flex-start and vice-versa.
        wrap-reverse means that row will start from bottom and move to top.
        https://mastery.games/flexboxzombies/chapter/9/level/6
    align-items: flex-start, flex-end, space-around, space-between, stretch(default)
        this arranges the lines of content along the container. note that flex-start and flex-end work opposite when used with 
        flex-wrap: wrap-reverse

    flex-flow: flex-firection flex-wrap

Individual Properties -

    align-self:flex-start, flex-end,center,stretch, baseline
    flex-grow: 0(default)
    flex-shrink:1(default)
    flex-basis(https://mastery.games/post/the-difference-between-width-and-flex-basis/) -

        values - auto(which means to fallback to the width(or height),px, percentage.
        
        flex-basis is never guarantee.It's actually more of an ideal or hypothetical size.when there's not enough space availbale,zombies only 
            get as much as of their flex-basis as space allows.
        
        overides width and height.(when value is auto it means value of flex-basis is taken from height or width)
        acts as width or height depending upon flex direction.
        respects max-width,min-width, max-height, min-height.

        Flex item (the DOM elements inside of a flex container) sizing follows this specific formula:

            content —> width —> flex-basis (limted by max-width & min-width)

    order : default 0;
        any integar value(negative values are also allowed)

        items line up in ascending order, lower the number closer will they to starting point. no order manes use 
        default value of 9.

    flex: it is shortcut for flex-grow,flex-shrink, flex-basis. w ehave to atleast specify flex-grow, other 2 arguments are optional and
    default to flex-shrink:1 and flex-basis: 0px.
        1)flex: 1 1
            If you do not provide any value for third param then flex-basis is set to 0px. so when you want to use default value for 
             flex-basis,then use -
                flex: 1 0 auto;

        2)flex: 0 300px;
        
            here you leave second parameter i.e shrink. then default value of shrink i.e 1 is used.
                ex -
                    flex: 0 300px;

        3)flex: 1
        
            you can use flex to just provide flex-grow, just remember that leaving 2nd and third arguments will use special flex defaults.
            i.e 1 for flex-shrink and 0px for flex-basis.

        4)flex: auto
            it means flex-grow:1 and flex-shrink:1 and flex-basis: auto

        5)flex:none

            it means flex-grow: 0, flex-shrink:0 and flex-basis: auto