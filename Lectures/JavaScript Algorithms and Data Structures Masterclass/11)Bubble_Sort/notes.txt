why should we learn about sorting
    1)It is common task
    2)Some sorting algorithm work better on one set of data while other work better on
        other set of data. so we need to decide when to use when.

    3)This is classic interview question, a good  problem

Elementary Sorting Algorithms-
    1)Bubble Sort
    2)Selection Sort
    3)Insertion Sort

    These are less commonly used because they are less efficient but that does mean that we should not 
    learn them because performace of algorithm depends on type of data. so some algorithm works better
    on some specific kind of data.

Algorithm Of Bubble Sort -
    we go through arary in loop and we compare element with his next elements. if it is smaller than we
    interchange them. we do it until end of array.so by first loop largest element is at last. in next iteration
    we start from begining but we exclude last element of array, as it is in it's correct position.we keep on doing
     this until all elements are sorted.

Bubble Sort-
    Not that efficient, so it is not commonly used. but there is one use case where it excels.
    we are learning it because it is good problem to solve and it also help us to understand
    why other algorithms improve upon it.

    it i called bubble sort because largest values bubble to the top one at a time. for the same
    reason it is also called sinking sort as largest values sinks to bottom. see code for bubble sort.

Bubble Sort Optimization-
    There can be optimization on bubble sort. This happens when we are working with array that is almost sorted.
    if we go through array in a iteration and there is no need for swap, then we can conclude that there is no need
    of any more iterations.To implement this in our code we introduce a new variable called noSwap.

    Bubble sort is best suited when data is almost sorted.


Time Complexity of Bubble Sort-

    Worst Case - O(n*n)
    Average Case - o(n*n)
    Best Case(With Nearly Sorted Array) - O(n)
    With nearly sorted array(i.e best case) and with Optimized Solution - O(n)

In Course there is a websit where we can compare diffrent types of sort -
 https://www.toptal.com/developers/sorting-algorithms