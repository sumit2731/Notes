if we use an object as the key in a regular Map, then while the Map exists, that object exists as well. 
    It occupies memory and may not be garbage collected.

WeakMap is fundamentally different in this aspect. It doesn’t prevent garbage-collection of key objects.

WeakMap -
    The first difference between Map and WeakMap is that keys must be objects, not primitive values.
    Now, if we use an object as the key in it, and there are no other references to that object – it 
        will be removed from memory (and from the map) automatically.
    WeakMap does not support iteration and methods keys(), values(), entries(). so there’s no way to get all keys or values from it.

WeatMap has only these methods -

    weakMap.get(key)
    weakMap.set(key, value)
    weakMap.delete(key)
    weakMap.has(key)

Usecases for Weak Map -
    1)obj that is managed by thrid party
    2)cache

The most notable limitation of WeakMap and WeakSet is the absence of iterations, and the inability to get 
    all current content. That may appear inconvenient, but does not prevent WeakMap/WeakSet from doing their
     main job – be an “additional” storage of data for objects which are stored/managed at another place.